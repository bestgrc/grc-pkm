# 编辑和运行Java程序
### 过程：
1. .java源文件  编译 javac.exe
2. .hello字节码文件 加载（通过java虚拟机） java.exe
3. 实际程序

### java虚拟机执行应用程序三大特点
1. 动态性
2. 异常处理
3. 多线程

### 面向对象概念
[面向对象与面向过程的区别][advance]
[advance]: https://zhidao.baidu.com/question/2089034.html
> 划分问题的方法是看“功能”还是看“步骤”

1. 封装
2. 继承
3. 多态（核心）



#### 多态

##### 1. 形式

- 将接口从具体的实施细节中分离出来，即实现了"是什么"与"怎样做"两个模块的分离。

##### 2. 优点	

- 代码的组织以及可读性获得改善
- 易于扩展





#### 七大原则
1. 单一职责原则（Single Responsibility Principle）：每一个类应该专注于做一件事情。
2. 里氏替换原则（Liskov Substitution Principle）：超类存在的地方，子类是可以替换的。
3. 依赖倒置原则（Dependence Inversion Principle）：实现尽量依赖抽象，不依赖具体实现。
4. 接口隔离原则（Interface Segregation Principle）：应当为客户端提供尽可能小的单独的接口，而不是提供大的总的接口。
5. 迪米特法则（Law Of Demeter）：又叫最少知识原则，一个软件实体应当尽可能少的与其他实体发生相互作用。
6. 开闭原则（Open Close Principle）：面向扩展开放，面向修改关闭。
7. 组合/聚合复用原则（Composite/Aggregate Reuse Principle CARP）：尽量使用组合/聚合达到复用，尽量少用继承。原则： 一个类中有另一个类的对象。
### JDBC
1. 下载并安装JDBC驱动
2. 创建数据库连接类  （参考数据库实验手册）
>1. 指定驱动
>2. 指定url
>3. 用户名、密码

#### 问题描述：
数组输出问题
```java
@SuppressWarnings("resource") //忽略警告
Scanner scanner = new Scanner(System.in);
		String sen = scanner.nextLine();
		String[] arr = sen.split(" ");
String[] arr = sen.split(" ");
System.out.println(arr[0].toString());
```
数组不能直接tostring输出，会输出地址
需要遍历每个一个数组元素进行输出

#### for循环遍历的高级用法
```java
/* 建立一个数组 */
 int[] integers = {1， 2， 3， 4};

 /* 开始遍历 */
 for (int i : integers) {
     System.out.println(i); /* 依次输出“1”、“2”、“3”、“4” */
 }
```

# 一级

## 二级

- 
- 





